import type { NextPage } from "next";
import Head from "next/head";
import internal from "stream";
import styles from "../styles/Home.module.css";

//Classes:
import { HashTable } from "../classes/HashTables";
import { useEffect, useState } from "react";

let ht: HashTable = new HashTable();
const Home: NextPage = () => {

  //States:
  const [map, setMap] = useState(ht.toString());

  const [insertName, setInsertName] = useState("");
  const [insertAge, setInsertAge] = useState("");

  const [deleteName, setDeleteName] = useState("");

  const [searchName, setSearchName] = useState("");

  const [incrementName, setIncrementName] = useState("");


  // useEffect(() => {
  //   setMap(ht.toString());
  // }, [ht.toString()]);

  //Submission functions for the forms:
  const handleInsert = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    ht.insert(insertName, parseInt(insertAge, 10));
    setMap(ht.toString());
  };
  const handleDelete = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    ht.delete(deleteName);
    setMap(ht.toString());
  };

  const handleSearch = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    console.log(ht.search(searchName));
    // setMap(ht.toString());
  };

  const handleIncrement = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    ht.increment(incrementName);
    setMap(ht.toString());
  };
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1 className={styles.title}>HashTable implementation</h1>
        <p className={styles.description}>
          This is a simple example of a HashTable implementation:
          <br />
          {map}
        </p>
        <div>
          <p className={styles.description}>
            Insert a new key-value pair into the HashTable:
          </p>
          <form onSubmit={handleInsert}>
            <label htmlFor="name">Name:</label>
            <br />
            <input
              type="text"
              id="name"
              name="name"
              required
              placeholder="Mo Bamba"
              value={insertName}
              onChange={(e) => setInsertName(e.target.value)}
            />
            <br />
            <label htmlFor="age">Age:</label>
            <br />
            <input
              type="number"
              id="age"
              name="age"
              required
              placeholder="42"
              value={insertAge}
              onChange={(e) => setInsertAge(e.target.value)}
            />
            <br />
            <button type="submit">Submit</button>
          </form>
        </div>
        <div>
          <p className={styles.description}>
            Delete a student from the HashTable:
          </p>
          <form onSubmit={handleDelete}>
            <label htmlFor="name">Name:</label>
            <br />
            <input
              type="text"
              id="name"
              name="name"
              required
              placeholder="Mo Bamba"
              value={deleteName}
              onChange={(e) => setDeleteName(e.target.value)}
            />
            <br />
            <button type="submit">Submit</button>
          </form>
        </div>
        <div>
          <p className={styles.description}>
            Insert a new key-value pair into the HashTable:
          </p>
          <form onSubmit={handleSearch}>
            <label htmlFor="name">Name:</label>
            <br />
            <input
              type="text"
              id="name"
              name="name"
              required
              placeholder="Mo Bamba"
              value={searchName}
              onChange={(e) => setSearchName(e.target.value)}
            />
            <br />
            <button type="submit">Submit</button>
          </form>
        </div>
        <div>
          <p className={styles.description}>
            Increment a student&apos;s age in the HashTable:
          </p>
          <form onSubmit={handleIncrement}>
            <label htmlFor="name">Name:</label>
            <br />
            <input
              type="text"
              id="name"
              name="name"
              required
              placeholder="Mo Bamba"
              value={incrementName}
              onChange={(e) => setIncrementName(e.target.value)}
            />
            <br />
            <button type="submit">Submit</button>
          </form>
        </div>
      </main>
    </div>
  );
};

export default Home;
